import 'dart:io';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:file_picker/file_picker.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';

class Books_App extends StatefulWidget {
  const Books_App({Key? key}) : super(key: key);

  @override
  State<Books_App> createState() => _Books_AppState();
}

class _Books_AppState extends State<Books_App> {
  TextEditingController first = new TextEditingController();
  TextEditingController firsttwo = new TextEditingController();
  TextEditingController cate = new TextEditingController();

  PlatformFile? pickedFile,pdfFile;
  late UploadTask uploadTask,uploadPDF;
  late String urlDownload, bookCover;

  Future uploadFile() async {
    if (pickedFile == null || pdfFile == null) {
      ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("Please Pick a File First..")));
    } else if (firsttwo.text.isEmpty ||
        first.text.isEmpty ||
        cate.text.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("Please Fill All Fields First..")));
    } else {
      final bookCoverpath = 'BooksApp/Images/${pickedFile!.name}';
      final bookCoverfile = File(pickedFile!.path!);

      final coverref = FirebaseStorage.instance.ref().child(bookCoverpath);
      uploadTask = coverref.putFile(bookCoverfile);

      final bookPdfpath = 'BooksApp/PDF/${pdfFile!.name}';
      final bookPdffile = File(pdfFile!.path!);

      final pdfref = FirebaseStorage.instance.ref().child(bookPdfpath);
      uploadPDF = pdfref.putFile(bookPdffile);

      final snapshot = await uploadTask.whenComplete(() {

      });

      final snapshotpdf = await uploadPDF.whenComplete(() {

      });

      urlDownload = await snapshot.ref.getDownloadURL();
      bookCover = await snapshotpdf.ref.getDownloadURL();
      // print('downLoad Like: $urlDownload');

      Map<String, dynamic> date = {
        "BookTitle": first.text,
        "BookDescription": firsttwo.text,
        "BookCategory": cate.text,
        "BookCover": urlDownload,
        "BookPdfFile": bookCover,
      };

      FirebaseFirestore.instance.collection("BooksApp").add(date);

      setState(() {
        first.clear();
        firsttwo.clear();
        cate.clear();
        pickedFile == null;
        pdfFile == null;
      });

    }
  }

  Future selectFile() async {
    final result = await FilePicker.platform.pickFiles();
    if (result == null) return;

    setState(() {
      pickedFile = result.files.first;
    });
  }

  Future selectPDFfile() async {
    final pdfresult = await FilePicker.platform.pickFiles();
    if (pdfresult == null) return;

    setState(() {
      pdfFile = pdfresult.files.first;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor: Colors.blueAccent,
        body: Center(
          child: SingleChildScrollView(
            child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [
              Padding(
                padding: const EdgeInsets.only(bottom: 15),
                child: Text(
                  "Books App Data",
                  style: TextStyle(
                      fontSize: 25,
                      color: Colors.white,
                      fontWeight: FontWeight.bold),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(10.0),
                child: TextFormField(
                  controller: first,
                  decoration: InputDecoration(
                    contentPadding: EdgeInsets.only(right: 10.0, left: 20.0),
                    fillColor: Colors.white,
                    focusColor: Colors.amberAccent,
                    prefixIcon: Icon(Icons.account_circle_outlined),
                    filled: true,
                    hintText: "Enter Book Title",
                    hintStyle: TextStyle(color: Colors.black),
                    border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(15.0)),
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(10.0),
                child: TextFormField(
                  controller: firsttwo,
                  decoration: InputDecoration(
                    contentPadding: EdgeInsets.only(right: 10.0, left: 20.0),
                    fillColor: Colors.white,
                    focusColor: Colors.amberAccent,
                    prefixIcon: Icon(Icons.account_circle_outlined),
                    filled: true,
                    hintText: "Enter Book Description",
                    hintStyle: TextStyle(color: Colors.black),
                    border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(15.0)),
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(10.0),
                child: TextFormField(
                  controller: cate,
                  decoration: InputDecoration(
                    contentPadding: EdgeInsets.only(right: 10.0, left: 20.0),
                    fillColor: Colors.white,
                    focusColor: Colors.amberAccent,
                    prefixIcon: Icon(Icons.account_circle_outlined),
                    filled: true,
                    hintText: "Enter Book Category",
                    hintStyle: TextStyle(color: Colors.black),
                    border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(15.0)),
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(15.0),
                child: Column(
                  children: [
                    if (pickedFile == null) ...[
                      Text(
                        overflow: TextOverflow.fade,
                        maxLines: 1,
                        softWrap: false,
                        "Please Pick a Book Cover ...",
                        style: TextStyle(fontSize: 15, color: Colors.white),
                      ),
                    ] else if (pickedFile != null) ...[
                      Text(
                        overflow: TextOverflow.fade,
                        maxLines: 1,
                        softWrap: false,
                        "Booke Cover Name : ${pickedFile?.name}",
                        style: TextStyle(fontSize: 15, color: Colors.white),
                      ),
                    ],
                  ],
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(15.0),
                child: Column(
                  children: [
                    if (pdfFile == null) ...[
                      Text(
                        overflow: TextOverflow.fade,
                        maxLines: 1,
                        softWrap: false,
                        "Please Pick a Book in PDF File ...",
                        style: TextStyle(fontSize: 15, color: Colors.white),
                      ),
                    ] else if (pdfFile != null) ...[
                      Text(
                        overflow: TextOverflow.fade,
                        maxLines: 1,
                        softWrap: false,
                        "Book PDF File : ${pdfFile?.name}",
                        style: TextStyle(fontSize: 15, color: Colors.white),
                      ),
                    ],
                  ],
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: ElevatedButton(
                        style: ButtonStyle(
                            shape:
                                MaterialStateProperty.all<RoundedRectangleBorder>(
                                    RoundedRectangleBorder(
                                        borderRadius: BorderRadius.circular(10.0),
                                        side: BorderSide(color: Colors.white)))),
                        child: const Text('Select Book Cover'),
                        onPressed: selectFile,
                      ),
                    ),
                  ),
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: ElevatedButton(
                        style: ButtonStyle(
                            shape:
                                MaterialStateProperty.all<RoundedRectangleBorder>(
                                    RoundedRectangleBorder(
                                        borderRadius: BorderRadius.circular(10.0),
                                        side: BorderSide(color: Colors.white)))),
                        child: const Text('Select Book PDF'),
                        onPressed: selectPDFfile,
                      ),
                    ),
                  ),
                ],
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: ElevatedButton(
                        style: ButtonStyle(
                          backgroundColor: MaterialStateColor.resolveWith((states) => Colors.amber),
                            shape:
                            MaterialStateProperty.all<RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(10.0),
                                    side: BorderSide(color: Colors.white)))),
                        child: const Text('Upload Your Book Now'),
                        onPressed: uploadFile,
                      ),
                    ),
                  ),
                ],
              ),
              // TextFormField(
              //   controller: first,
              //   decoration: InputDecoration(hintText: "Text Here"),
              // ),
              // TextFormField(
              //   controller: firsttwo,
              //   decoration: InputDecoration(hintText: "Text Here there"),
              // ),
              // ElevatedButton(
              //     child: const Text('Upload File'),
              //     onPressed: () {
              //       uploadFile();
              //     }),
            ]),
          ),
        ));
  }
}
